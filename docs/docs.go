// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/badge": {
            "get": {
                "description": "Get list of all badges",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Badge"
                ],
                "summary": "Get all badges",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Badge ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit Per Page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new badge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Badge"
                ],
                "summary": "Create a new badge",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Badge Image File",
                        "name": "imageFile",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "minLength": 5,
                        "type": "string",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "donationThreshold",
                        "in": "formData"
                    },
                    {
                        "maxLength": 20,
                        "minLength": 3,
                        "type": "string",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/badge/{badgeID}": {
            "get": {
                "description": "Get badge details by badge ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Badge"
                ],
                "summary": "Get badge by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Badge ID",
                        "name": "badgeID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing badge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Badge"
                ],
                "summary": "Update badge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Badge ID",
                        "name": "badgeID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Badge Image File",
                        "name": "imageFile",
                        "in": "formData"
                    },
                    {
                        "maxLength": 100,
                        "minLength": 5,
                        "type": "string",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "donationThreshold",
                        "in": "formData"
                    },
                    {
                        "maxLength": 20,
                        "minLength": 3,
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a badge by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Badge"
                ],
                "summary": "Delete badge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Badge ID",
                        "name": "badgeID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/campaign/{campaignID}": {
            "delete": {
                "description": "Deletes a campaign based on the provided campaign ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Delete a Campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/campaign/{campaignID}/verify": {
            "patch": {
                "description": "Updates the verification status of a campaign.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Change Campaign Verification Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Campaign",
                        "name": "verify",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CampaignChangeVerify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/category": {
            "post": {
                "description": "Creates a new category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create Category",
                "parameters": [
                    {
                        "description": "Create Category Request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryCreateDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/category/{categoryID}": {
            "get": {
                "description": "Retrieves a category by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get Category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Category Request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a category by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Delete Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/donation": {
            "get": {
                "description": "Retrieves a list of donations based on given filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Donation"
                ],
                "summary": "Get Donations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Donation ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit Per Page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/donation/{donationID}": {
            "get": {
                "description": "Retrieves a donation based on the provided donation ID. User can only view their own donation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Donation"
                ],
                "summary": "Get Donation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Donation ID",
                        "name": "donationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a donation based on the provided donation ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Donation"
                ],
                "summary": "Delete a Donation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Donation ID",
                        "name": "donationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/badge/user/": {
            "get": {
                "description": "Retrieves all badges owned by a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Badge"
                ],
                "summary": "Get user's badges",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/campaign": {
            "get": {
                "description": "Retrieves a list of campaigns based on given filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Get Campaigns",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category ID List",
                        "name": "categoryIDList",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Campaign Verifiy",
                        "name": "isVerified",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit Per Page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new campaign.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Create a Campaign for User",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Campaign Image File",
                        "name": "imageFile",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "acceptedTokenSymbol",
                        "in": "formData"
                    },
                    {
                        "maxLength": 500,
                        "type": "string",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "endDate",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "startDate",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "statusType",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "targetAmount",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 500,
                        "type": "string",
                        "name": "walletAddress",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/campaign/{campaignID}": {
            "get": {
                "description": "Retrieves a campaign based on the provided campaign ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Get Campaign by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the details of an existing campaign.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Update a Campaign for User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Campaign Image File",
                        "name": "imageFile",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "acceptedTokenSymbol",
                        "in": "formData"
                    },
                    {
                        "maxLength": 500,
                        "type": "string",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "endDate",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "startDate",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "statusType",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "targetAmount",
                        "in": "formData"
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "maxLength": 500,
                        "type": "string",
                        "name": "walletAddress",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a campaign based on the provided campaign ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Delete a Campaign for User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/campaign/{campaignID}/category": {
            "post": {
                "description": "Adds a category to the campaign.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Add Category to Campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category ID",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CampaignCategoryAddDelete"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a category from the campaign.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Remove Category from Campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category ID",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CampaignCategoryAddDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/campaign/{campaignID}/isValid": {
            "get": {
                "description": "Checks if the campaign is valid based on its end date, target amount raised, etc. Request This Before Donation!!!!!!!!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Check if the Campaign is Valid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/category": {
            "get": {
                "description": "Retrieves a list of categories with optional pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get Categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit Per Page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/donation": {
            "get": {
                "description": "Retrieves a list of donations based on given filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Donation"
                ],
                "summary": "Get Donations for User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Donation ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaignID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit Per Page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new donation for a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Donation"
                ],
                "summary": "Create a Donation for User",
                "parameters": [
                    {
                        "description": "New Donation",
                        "name": "donation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DonationCreateDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/donation/{donationID}": {
            "get": {
                "description": "Retrieves a donation based on the provided donation ID. User can only view their own donation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Donation"
                ],
                "summary": "Get Donation by ID for User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Donation ID",
                        "name": "donationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/private/user/profile": {
            "get": {
                "description": "Retrieves users profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User Profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Updates users profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User Profile",
                "parameters": [
                    {
                        "description": "New User Profile",
                        "name": "newUserProfile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserProfileUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/public/auth": {
            "post": {
                "description": "Auth with Wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Auth",
                "parameters": [
                    {
                        "description": "Auth Information",
                        "name": "auth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuthWalletDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/public/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/public/logout": {
            "post": {
                "description": "Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CampaignCategoryAddDelete": {
            "type": "object",
            "required": [
                "categoryID"
            ],
            "properties": {
                "categoryID": {
                    "type": "string",
                    "maxLength": 500
                }
            }
        },
        "dto.CampaignChangeVerify": {
            "type": "object",
            "properties": {
                "isVerified": {
                    "type": "boolean"
                }
            }
        },
        "dto.CategoryCreateDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 3
                }
            }
        },
        "dto.CategoryUpdateDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 3
                }
            }
        },
        "dto.DonationCreateDTO": {
            "type": "object",
            "required": [
                "amount",
                "campaignID",
                "transactionID"
            ],
            "properties": {
                "amount": {
                    "type": "string"
                },
                "campaignID": {
                    "type": "string"
                },
                "transactionID": {
                    "type": "string"
                }
            }
        },
        "dto.UserAuthWalletDTO": {
            "type": "object",
            "required": [
                "message",
                "signatureBase58",
                "walletAddress"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "signatureBase58": {
                    "type": "string"
                },
                "walletAddress": {
                    "type": "string"
                }
            }
        },
        "dto.UserProfileUpdateDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 30
                },
                "surname": {
                    "type": "string",
                    "maxLength": 30
                }
            }
        },
        "response.BaseResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "dataCount": {
                    "type": "integer"
                },
                "errors": {},
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "session_id",
            "in": "cookie"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "localhost",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "API Service",
	Description:      "API Service for Aidly",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
