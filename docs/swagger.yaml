basePath: /api/v1
definitions:
  dto.UserAuthWalletDTO:
    properties:
      message:
        type: string
      signatureBase58:
        type: string
      walletAddress:
        type: string
    required:
    - message
    - signatureBase58
    - walletAddress
    type: object
  dto.UserLoginDTO:
    properties:
      password:
        minLength: 8
        type: string
      username:
        maxLength: 30
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  dto.UserProfileUpdateDTO:
    properties:
      name:
        maxLength: 30
        type: string
      surname:
        maxLength: 30
        type: string
    type: object
  response.BaseResponse:
    properties:
      data: {}
      dataCount:
        type: integer
      errors: {}
      message:
        type: string
      statusCode:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Service for Aidly
  title: API Service
paths:
  /private/user/profile:
    get:
      consumes:
      - application/json
      description: Retrieves users profile.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Get User Profile
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Updates users profile.
      parameters:
      - description: New User Profile
        in: body
        name: newUserProfile
        required: true
        schema:
          $ref: '#/definitions/dto.UserProfileUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Update User Profile
      tags:
      - User
  /public/auth:
    post:
      consumes:
      - application/json
      description: Auth with Wallet
      parameters:
      - description: Auth Information
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/dto.UserAuthWalletDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Auth
      tags:
      - Auth
  /public/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Login
      tags:
      - Auth
  /public/logout:
    post:
      consumes:
      - application/json
      description: Logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Logout
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: cookie
    name: session_id
    type: apiKey
swagger: "2.0"
