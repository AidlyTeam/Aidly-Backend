basePath: /api/v1
definitions:
  dto.CampaignChangeVerify:
    properties:
      isVerified:
        type: boolean
    type: object
  dto.DonationCreateDTO:
    properties:
      amount:
        type: string
      campaignID:
        type: string
      transactionID:
        type: string
    required:
    - amount
    - campaignID
    - transactionID
    type: object
  dto.UserAuthWalletDTO:
    properties:
      message:
        type: string
      signatureBase58:
        type: string
      walletAddress:
        type: string
    required:
    - message
    - signatureBase58
    - walletAddress
    type: object
  dto.UserProfileUpdateDTO:
    properties:
      name:
        maxLength: 30
        type: string
      surname:
        maxLength: 30
        type: string
    type: object
  response.BaseResponse:
    properties:
      data: {}
      dataCount:
        type: integer
      errors: {}
      message:
        type: string
      statusCode:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Service for Aidly
  title: API Service
paths:
  /admin/campaign/{campaignID}:
    delete:
      consumes:
      - application/json
      description: Deletes a campaign based on the provided campaign ID.
      parameters:
      - description: Campaign ID
        in: path
        name: campaignID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Delete a Campaign
      tags:
      - Campaign
  /admin/campaign/{campaignID}/verify:
    patch:
      consumes:
      - application/json
      description: Updates the verification status of a campaign.
      parameters:
      - description: Campaign ID
        in: path
        name: campaignID
        required: true
        type: string
      - description: Updated Campaign
        in: body
        name: verify
        required: true
        schema:
          $ref: '#/definitions/dto.CampaignChangeVerify'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Change Campaign Verification Status
      tags:
      - Campaign
  /admin/donation:
    get:
      consumes:
      - application/json
      description: Retrieves a list of donations based on given filters.
      parameters:
      - description: Donation ID
        in: query
        name: id
        type: string
      - description: User ID
        in: query
        name: userID
        type: string
      - description: Campaign ID
        in: query
        name: campaignID
        type: string
      - description: Page Number
        in: query
        name: page
        type: string
      - description: Limit Per Page
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Get Donations
      tags:
      - Donation
  /admin/donation/{donationID}:
    delete:
      consumes:
      - application/json
      description: Deletes a donation based on the provided donation ID.
      parameters:
      - description: Donation ID
        in: path
        name: donationID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Delete a Donation
      tags:
      - Donation
    get:
      consumes:
      - application/json
      description: Retrieves a donation based on the provided donation ID. User can
        only view their own donation.
      parameters:
      - description: Donation ID
        in: path
        name: donationID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Get Donation by ID
      tags:
      - Donation
  /private/campaign:
    get:
      consumes:
      - application/json
      description: Retrieves a list of campaigns based on given filters.
      parameters:
      - description: Campaign ID
        in: query
        name: id
        type: string
      - description: User ID
        in: query
        name: userID
        type: string
      - description: Campaign Verifiy
        in: query
        name: isVerified
        type: string
      - description: Page Number
        in: query
        name: page
        type: string
      - description: Limit Per Page
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Get Campaigns
      tags:
      - Campaign
    post:
      consumes:
      - application/json
      description: Creates a new campaign.
      parameters:
      - description: Campaign Image File
        in: formData
        name: imageFile
        required: true
        type: file
      - in: formData
        maxLength: 500
        name: description
        required: true
        type: string
      - in: formData
        name: endDate
        required: true
        type: string
      - in: formData
        name: startDate
        required: true
        type: string
      - in: formData
        name: targetAmount
        required: true
        type: string
      - in: formData
        maxLength: 100
        name: title
        required: true
        type: string
      - in: formData
        maxLength: 500
        name: walletAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Create a Campaign for User
      tags:
      - Campaign
  /private/campaign/{campaignID}:
    delete:
      consumes:
      - application/json
      description: Deletes a campaign based on the provided campaign ID.
      parameters:
      - description: Campaign ID
        in: path
        name: campaignID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Delete a Campaign for User
      tags:
      - Campaign
    get:
      consumes:
      - application/json
      description: Retrieves a campaign based on the provided campaign ID.
      parameters:
      - description: Campaign ID
        in: path
        name: campaignID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Get Campaign by ID
      tags:
      - Campaign
    put:
      consumes:
      - application/json
      description: Updates the details of an existing campaign.
      parameters:
      - description: Campaign ID
        in: path
        name: campaignID
        required: true
        type: string
      - description: Campaign Image File
        in: formData
        name: imageFile
        type: file
      - in: formData
        maxLength: 500
        name: description
        type: string
      - in: formData
        name: endDate
        type: string
      - in: formData
        name: startDate
        type: string
      - in: formData
        name: targetAmount
        type: string
      - in: formData
        maxLength: 100
        name: title
        type: string
      - in: formData
        maxLength: 500
        name: walletAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Update a Campaign for User
      tags:
      - Campaign
  /private/campaign/{campaignID}/isValid:
    get:
      consumes:
      - application/json
      description: Checks if the campaign is valid based on its end date, target amount
        raised, etc. Request This Before Donation!!!!!!!!
      parameters:
      - description: Campaign ID
        in: path
        name: campaignID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Check if the Campaign is Valid
      tags:
      - Campaign
  /private/donation:
    get:
      consumes:
      - application/json
      description: Retrieves a list of donations based on given filters.
      parameters:
      - description: Donation ID
        in: query
        name: id
        type: string
      - description: Campaign ID
        in: query
        name: campaignID
        type: string
      - description: Page Number
        in: query
        name: page
        type: string
      - description: Limit Per Page
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Get Donations for User
      tags:
      - Donation
    post:
      consumes:
      - application/json
      description: Creates a new donation for a user.
      parameters:
      - description: New Donation
        in: body
        name: donation
        required: true
        schema:
          $ref: '#/definitions/dto.DonationCreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Create a Donation for User
      tags:
      - Donation
  /private/donation/{donationID}:
    get:
      consumes:
      - application/json
      description: Retrieves a donation based on the provided donation ID. User can
        only view their own donation.
      parameters:
      - description: Donation ID
        in: path
        name: donationID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Get Donation by ID for User
      tags:
      - Donation
  /private/user/profile:
    get:
      consumes:
      - application/json
      description: Retrieves users profile.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Get User Profile
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Updates users profile.
      parameters:
      - description: New User Profile
        in: body
        name: newUserProfile
        required: true
        schema:
          $ref: '#/definitions/dto.UserProfileUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Update User Profile
      tags:
      - User
  /public/auth:
    post:
      consumes:
      - application/json
      description: Auth with Wallet
      parameters:
      - description: Auth Information
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/dto.UserAuthWalletDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Auth
      tags:
      - Auth
  /public/login:
    post:
      consumes:
      - application/json
      description: Login
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Login
      tags:
      - Auth
  /public/logout:
    post:
      consumes:
      - application/json
      description: Logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Logout
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: cookie
    name: session_id
    type: apiKey
swagger: "2.0"
