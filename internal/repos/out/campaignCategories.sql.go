// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: campaignCategories.sql

package repo

import (
	"context"

	"github.com/google/uuid"
)

const createCampaignCategory = `-- name: CreateCampaignCategory :one
INSERT INTO t_campaign_categories (campaign_id, category_id)
VALUES ($1, $2)
RETURNING id
`

type CreateCampaignCategoryParams struct {
	CampaignID uuid.UUID
	CategoryID uuid.UUID
}

func (q *Queries) CreateCampaignCategory(ctx context.Context, arg CreateCampaignCategoryParams) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, createCampaignCategory, arg.CampaignID, arg.CategoryID)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}

const deleteCampaignCategory = `-- name: DeleteCampaignCategory :exec
DELETE FROM t_campaign_categories
WHERE campaign_id = $1 AND category_id = $2
`

type DeleteCampaignCategoryParams struct {
	CampaignID uuid.UUID
	CategoryID uuid.UUID
}

func (q *Queries) DeleteCampaignCategory(ctx context.Context, arg DeleteCampaignCategoryParams) error {
	_, err := q.db.ExecContext(ctx, deleteCampaignCategory, arg.CampaignID, arg.CategoryID)
	return err
}
